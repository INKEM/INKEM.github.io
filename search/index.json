[{"content":" 由于博主还未学习数字电路和计算机组成原理，因此本系列先开展单片机软件编程的内容，硬件结构的内容简单带过，会考虑安排在后续学习计划中，编程入门部分不会深入涉及单片机电路结构原理。博主已有C语言基础，因此相关内容不会从零开始赘述\n主要参考学习资料：B站【普中官方】51单片机手把手教学视频\n前置知识：C语言\n单片机套装：普中STC51单片机开发板A4标准版套餐7\n单片机介绍 单片机（Micro Controller Unit），简称MCU\n内部集成了CPU、RAM、ROM、定时器、中断系统、通讯接口等一系列电脑常用硬件功能\n单片机的任务是信息采集（依靠传感器）、处理（依靠CPU）和硬件设备（例如电机、LED等）的控制\n跟计算机相比，单片机是一个袖珍版计算机，一个芯片就能构成完整的计算机系统，但在性能上与计算机相差甚远，但单片机成本低、体积小、结构简单，在生活和工业控制领域大有所用的同时，学习使用单片机也是了解计算机原理与结构的最佳选择\n51单片机是对所有兼容Intel 8051指令系统的单片机的统称\nSTC89C52系列内部结构框图\nSTC89C52系列PDIP封装管脚图\n51单片机最小系统 能使51单片机工作的最简单最基础的电路统称为51单片机最小系统，由晶振电路、复位电路、电源电路构成，而要为单片机烧录程序还需要下载电路\n晶振电路 晶振电路为单片机正常工作提供一个时钟\n51单片机的时钟频率在0~40MHz运行，通常选用12MHz（便于计算时间）或11.059MHz（串行通信波特率为零）的晶振接在管脚18、19\n旁路电容作用：消除晶振接入电路一瞬间产生的电感干扰，一端接地，电容大小取决于晶振大小\n复位电路 复位电路提供系统复位的操作，当系统工作不正常或死机时可以重启系统\n复位的两种方式：手动按键复位（上图）和接通电源自动复位（下图）\nSTC89C51单片机为高电平复位，只要让引脚保持一段时间的高电平即可复位\n电源电路 单片机电压过大会烧毁电路，电压过小系统会运行不起来，因此需要挑选合适的电源电路\n下载电路 下载电路将编译文件下载到单片机\nC语言C51扩充内容 C51扩充数据类型 类型 长度 值域 说明 bit 位 0或1 位变量声明 sbit 位 0或1 特殊功能位声明 sfr 8位=1字节 0~255 特殊功能寄存器声明 sfr16 16位=2字节 0~65535 sfr的16位数据声明 * 1~3字节 对象的地址 例：\n1 2 3 4 sfr SCON = 0x98; //使用SCON控制单片机上地址为0x98的寄存器 sbit TI = SCON^1; //使用TI控制八位寄存器SCON位0~7中的位1 reg52头文件 reg52头文件定义了51单片机特殊功能寄存器和特殊功能位的名字以便我们访问\n1 2 3 #include \u0026lt;reg52.h\u0026gt;//直接在安装目录下寻找头文件 #include \u0026#34;reg52.h\u0026#34;//先在工程目录下寻找头文件，再到安装目录 //右键头文件可打开头文件内容 头文件内容（了解如何定义即可）\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 /*-------------------------------------------------------------------------- REG52.H Header file for generic 80C52 and 80C32 microcontroller. Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc. All rights reserved. --------------------------------------------------------------------------*/ #ifndef __REG52_H__ #define __REG52_H__ /* BYTE Registers */ sfr P0 = 0x80; sfr P1 = 0x90; sfr P2 = 0xA0; sfr P3 = 0xB0; sfr PSW = 0xD0; sfr ACC = 0xE0; sfr B = 0xF0; sfr SP = 0x81; sfr DPL = 0x82; sfr DPH = 0x83; sfr PCON = 0x87; sfr TCON = 0x88; sfr TMOD = 0x89; sfr TL0 = 0x8A; sfr TL1 = 0x8B; sfr TH0 = 0x8C; sfr TH1 = 0x8D; sfr IE = 0xA8; sfr IP = 0xB8; sfr SCON = 0x98; sfr SBUF = 0x99; /* 8052 Extensions */ sfr T2CON = 0xC8; sfr RCAP2L = 0xCA; sfr RCAP2H = 0xCB; sfr TL2 = 0xCC; sfr TH2 = 0xCD; /* BIT Registers */ /* PSW */ sbit CY = PSW^7; sbit AC = PSW^6; sbit F0 = PSW^5; sbit RS1 = PSW^4; sbit RS0 = PSW^3; sbit OV = PSW^2; sbit P = PSW^0; //8052 only /* TCON */ sbit TF1 = TCON^7; sbit TR1 = TCON^6; sbit TF0 = TCON^5; sbit TR0 = TCON^4; sbit IE1 = TCON^3; sbit IT1 = TCON^2; sbit IE0 = TCON^1; sbit IT0 = TCON^0; /* IE */ sbit EA = IE^7; sbit ET2 = IE^5; //8052 only sbit ES = IE^4; sbit ET1 = IE^3; sbit EX1 = IE^2; sbit ET0 = IE^1; sbit EX0 = IE^0; /* IP */ sbit PT2 = IP^5; sbit PS = IP^4; sbit PT1 = IP^3; sbit PX1 = IP^2; sbit PT0 = IP^1; sbit PX0 = IP^0; /* P3 */ sbit RD = P3^7; sbit WR = P3^6; sbit T1 = P3^5; sbit T0 = P3^4; sbit INT1 = P3^3; sbit INT0 = P3^2; sbit TXD = P3^1; sbit RXD = P3^0; /* SCON */ sbit SM0 = SCON^7; sbit SM1 = SCON^6; sbit SM2 = SCON^5; sbit REN = SCON^4; sbit TB8 = SCON^3; sbit RB8 = SCON^2; sbit TI = SCON^1; sbit RI = SCON^0; /* P1 */ sbit T2EX = P1^1; // 8052 only sbit T2 = P1^0; // 8052 only /* T2CON */ sbit TF2 = T2CON^7; sbit EXF2 = T2CON^6; sbit RCLK = T2CON^5; sbit TCLK = T2CON^4; sbit EXEN2 = T2CON^3; sbit TR2 = T2CON^2; sbit C_T2 = T2CON^1; sbit CP_RL2 = T2CON^0; #endif 点亮第一个LED C51单片机GPIO介绍及LED线路 **GPIO（General Purpose Input Output）**是通用输入输出端口的简称，可以通过软件来控制其输入和输出\n51单片机引脚分类：\n电源引脚（Vcc/Vdd/Gnd/Vss） 晶振引脚（XTAL） 复位引脚（RST/Reset） 下载引脚（P3.0/P3.1） GPIO引脚（P0~P3） 详细管脚功能可在单片机手册中查询\nLED线路图\n程序1：点亮D1指示灯 1 2 3 4 5 6 7 #include \u0026#34;reg52.h\u0026#34; sbit LED1 = P2^0;//将控制D1灯的P2管脚第0位命名为LED1 void main() { LED1 = 0;//设置LED1为低电平，LED低电平0点亮，高电平1熄灭 } 效果图\n程序2：控制D1指示灯闪烁 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include \u0026#34;reg52.h\u0026#34; typedef unsigned int u16; sbit LED1 = P2^0; void delay_10us(u16 time)//定义延时函数 { while(time --); //单次while循环时间约为10微秒，后续讲到定时器可以准确计时 } void main() { while(1) { LED1 = 0;//点亮D1灯 delay_10us(50000);//延时约488毫秒 LED1 = 1;//熄灭D1灯 delay_10us(50000); } } 程序3：LED流水灯 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include \u0026#34;reg52.h\u0026#34; #define LED_PORT P2//使用宏定义将P2端口定义 typedef unsigned char u8; typedef unsigned int u16; void delay_10us(u16 time) { while(time --); } void main() { u8 i = 0;//循环控制变量 while(1) { for(i = 0;i \u0026lt; 8;i++) { LED_PORT = ~(0x01 \u0026lt;\u0026lt; i);//见下文解读 delay_10us(50000); } } } LED_PORT用八位二进制数上的每一位分别控制八个LED灯的电平，要实现流水灯，其值应当这样变化：11111110→11111101→11111011→……\n不难想到可以通过左移运算符让二进制数的数位整体左移，但是二进制数左移后最右侧会补零而不是补一，因此采用对00000001左移再按位取反的方法\n代码中0x01采用十六进制是为了简洁\n额外介绍一个使用intrins头文件中左移右移的方法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include \u0026#34;reg52.h\u0026#34; #include \u0026#34;intrins.h\u0026#34; #define LED_PORT P2 typedef unsigned char u8; typedef unsigned int u16; void delay_10us(u16 time) { while(time --); } void main() { u8 i = 0; LED_PORT =~ 0x01; while(1) { for(i = 0;i \u0026lt; 7;i++) { LED_PORT = _crol_(LED_PORT,1); //对LED_PORT左移1位，并将左侧移出去的数位补到右侧，即11111110→11111101 delay_10us(50000); } for(i = 0;i \u0026lt; 7;i++) { LED_PORT = _cror_(LED_PORT,1);//右移同理 delay_10us(50000); } } } 该程序进一步实现流水灯从左到右再从右到左来回闪烁的效果\n本章完\n","date":"2024-11-09T00:00:00Z","permalink":"https://INKEM.github.io/p/51%E5%8D%95%E7%89%87%E6%9C%BA%E7%A8%8B%E5%BA%8F%E5%AE%9E%E9%AA%8Cep1.%E7%82%B9%E4%BA%AEled/","title":"【51单片机】程序实验Ep1.点亮LED"},{"content":"修复了LaTex内联公式中下划线引起Markdown语法歧义导致公式无法正常显示的bug\n新增樱花背景和动态效果，默认模式为深色\n更改字体为初夏明朝体\nbug解决方法：\nhugo.yaml文件中第227行开始\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 markup: goldmark: extensions: passthrough: enable: true delimiters: block: - - \\[ - \\] - - $$ - $$ inline: - - \\( - \\) 在inline后新增行内分隔符\n1 2 - - $ - $ ","date":"2024-11-08T00:00:00Z","permalink":"https://INKEM.github.io/p/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E6%9B%B4%E6%96%B0%E5%85%AC%E5%91%8A1/","title":"博客配置更新公告1"},{"content":" 主要参考学习资料及插图来源：\n《机器人学导论（第4版）》John J.Craig著\n台大机器人学之运动学——林沛群\n本章数理基础：矩阵的四则运算\n操作臂（正向）运动学 运动学讨论运动状态本身，不涉及产生运动的力\n连杆的描述 连杆参数 关节（Joint）分为移动关节和旋转关节，每个关节有一个自由度，对一个特定的轴移动或转动\n连杆（Link）为连接关节的杆件，视作刚体\n连杆的编号从固定基座开始，称固定基座为连杆0，第一个可动连杆为连杆1，以此类推，操作臂最末端的连杆为连杆n\n单个连杆：连杆长度和连杆扭转角\n连杆$i-1$连接了关节轴$i-1$和关节轴$i$，关节轴$i-1$和关节轴$i$之间公垂线长度$a_{i-1}$为连杆长度\n作一平面与两关节轴公垂线垂直，关节轴$i-1$和关节轴$i$在该平面上投影的夹角$\\alpha_{i-1}$为连杆扭转角（即空间中两直线夹角的定义） 平面图像表达空间关系可能存在视错觉，需结合文字描述来分析\n多杆串连：连杆偏距和关节角\n关节轴$i$上的两个相邻连杆沿公共轴线方向的距离$d_i$为连杆偏距\n两个相邻连杆绕公共轴线旋转的夹角$\\theta_i$为关节角\n对于首端连杆（固定基座）和末端连杆（末端执行器），习惯设定$a_0=a_n=0$，$\\alpha_0=\\alpha_n=0$\n对于关节$1$，若为转动关节，$\\theta_1$任取，$d_1=0$；若为移动关节，$d_1$任取，$\\theta_1=0$。关节$n$同理 连杆参数\n由此，机器人的每个连杆都可以用上述四个运动学参数来描述\n对于转动关节，$\\theta_i$为关节变量，其他三个连杆参数固定不变；对于移动关节，$d_i$为关节变量，其他三个连杆参数固定不变。这种用连杆参数描述机构运动关系的规则称为Denavit-Hartenberg方法（简称D-H表示法）\n连杆坐标系 中间连杆坐标系\n按以下方法确定连杆上的固连坐标系$\\{i\\}$：\n原点位于公垂线$a_i$与关节轴$i$的交点处\n$\\hat{Z}_i$轴与关节轴$i$重合\n$\\hat{X}_i$轴：当$a_i\\ne0$，沿$a_i$方向由关节$i$指向关节$i+1$；当$a_i=0$，垂直于$\\hat{Z}_i$和$\\hat{Z}_{i+1}$所在的平面\n$\\hat{Y}_i$轴由右手定则确定\n由于$\\hat{Z}_i$轴可选取两个方向，且当关节轴$i$与$i+1$相交时$\\hat{X}_i$轴可选取两个方向，建立的坐标系并不唯一 首末端连杆坐标系\n首端连杆坐标系$\\{0\\}$与关节$1$初始姿态时（关节变量为$0$）的坐标系$\\{1\\}$重合\n末端连杆坐标系$\\{N\\}$原点位于公垂线$a_{N-1}$与关节轴$\\{N\\}$交点处，$\\hat{X}_N$轴与$\\hat{X}_{N-1}$轴同向\n连杆坐标系中的D-H表示法\n$a_i=$沿$\\hat{X}_i$轴从${\\hat{Z}_i}$移动到$\\hat{Z}_{i+1}$的距离\n$\\alpha_i=$绕$\\hat{X}_i$轴从$\\hat{Z}_i$旋转到$\\hat{Z}_{i+1}$的角度\n$d_i=$沿$\\hat{Z}_i$轴从$\\hat{X}_{i-1}$移动到$\\hat{X}_i$的距离\n$\\theta_i=$绕$\\hat{Z}_i$轴从$\\hat{X}_{i-1}$旋转到$\\hat{X}_i$的角度\n$a_i\u003e0$，$\\alpha_i$、$d_i$和$\\theta_i$的值相对于坐标系主轴方向有正负\n建立连杆坐标系的步骤\n1.画出各关节轴的延长线\n2.找出相邻关节轴$i$和$i+1$的公垂线或交点，以关节轴$i$和$i+1$的交点或公垂线与关节轴$i$的交点作为连杆坐标系$\\{i\\}$的原点\n3.规定$\\hat{Z}_i$轴沿关节轴$i$的指向\n4.规定$\\hat{X}_i$轴沿公垂线的指向，若关节轴$i$与$i+1$相交则垂直于关节轴$i$与$i+1$所在的平面\n5.按右手定则确定$\\hat{Y}_i$轴\n6.补充首末端连杆坐标系\n坐标系的标准命名\n基（Base）坐标系$\\{B\\}$位于操作臂的基座上\n固定（Settle）坐标系$\\{S\\}$位置与任务相关，比如工作台的一个角上\n腕部（Wrist）坐标系$\\{W\\}$位于操作臂的末端连杆\n工具（Tool）坐标系$\\{T\\}$位于机器人所夹持工具的末端\n目标（Goal）坐标系$\\{G\\}$是对机器人移动工具到达的位置描述 操作臂运动学 连杆变换（Link Transformation） 我们希望用四个连杆参数建立起相邻连杆坐标系$\\{i\\}$和$\\{i-1\\}$之间的变换关系，即$^{i-1}P=^{i-1}_{i}T^iP$ 我们考虑借由图中标出的四个连杆参数将$\\{i-1\\}$一步步变换为$\\{i\\}$\n将$\\{i-1\\}$绕$\\hat{X}_{i-1}$旋转$\\alpha_{i-1}$得到$\\{R\\}$\n将$\\{R\\}$沿$\\hat{X}_R$平移$a_{i-1}$得到$\\{Q\\}$\n将$\\{Q\\}$绕$\\hat{Z}_Q$旋转$\\theta_i$得到$\\{P\\}$\n将$\\{P\\}$沿$\\hat{Z}_P$平移$d_i$得到$\\{i\\}$\n于是变换矩阵可写成：\n$^{i-1}P=^{i-1}_{i}T^iP=^{i-1}_RT^R_QT^Q_PT^P_iT^iP$\n$^{i-1}_{i}T=^{i-1}_RT^R_QT^Q_PT^P_iT=R_X(\\alpha_{i-1})D_X(a_{i-1})R_Z(\\theta_i)D_Z(d_i)$\n最终计算得到：\n$^{i-1}_{i}T=\\begin{bmatrix}c\\theta_i\u0026-s\\theta_i\u00260\u0026a_{i-1}\\\\s\\theta_ic\\alpha_{i-1}\u0026c\\theta_ic\\alpha_{i-1}\u0026-s\\alpha_{i-1}\u0026-s\\alpha_{i-1}d_i\\\\s\\theta_is\\alpha_{i-1}\u0026c\\theta_is\\alpha_{i-1}\u0026c\\alpha_{i-1}\u0026c\\alpha_{i-1}d_i\\\\0\u00260\u00260\u00261\\end{bmatrix}$\n左上角$3\\times3$为旋转矩阵，最右列为$\\{i\\}$的原点相对于$\\{i-1\\}$的原点的位置矢量\n计算出各个连杆变换矩阵，将其连乘就能得到$\\{N\\}$相对于$\\{0\\}$的变换矩阵：\n$^0_NT=^0_1T^1_2T^2_3T…^{N-1}_NT$\n驱动器空间、关节空间和笛卡尔空间 对一个具有$n$个自由度的操作臂来说，它的所有连杆位置可由一组$n$个关节变量确定，这样的一组变量被称为$n\\times1$的关节向量，所有关节向量组成的空间称为关节空间（Joint Space）\n至此，我们研究的是如何将已知的关节空间描述转化为在笛卡尔空间（Cartesian Space）中的描述，称为正向运动学（Forward Kinematics），反之则为逆运动学（Inverse Kinematics）\n我们一直假设每个运动关节都是直接由某种驱动器驱动，但许多机器人有时用两个驱动器以差动的方式驱动一个关节，有时用直线驱动器通过四连杆机构来驱动旋转关节，而测量操作臂位置的传感器常常安装在驱动器上，因此进行控制器运算时必须把关节向量表示成一组驱动器变量方程，即驱动向量，组成的空间称为驱动器空间（Actuator Space） 本章完\n","date":"2024-11-06T00:00:00Z","permalink":"https://INKEM.github.io/p/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%AF%BC%E8%AE%BAep3.%E6%93%8D%E4%BD%9C%E8%87%82%E6%AD%A3%E5%90%91%E8%BF%90%E5%8A%A8%E5%AD%A6/","title":"【机器人学导论】Ep3.操作臂（正向）运动学"},{"content":" 主要参考学习资料及插图来源：\n《机器人学导论（第4版）》John J.Craig著\n台大机器人学之运动学——林沛群\n本章前置知识：矢量和矩阵的四则运算-单位矩阵-转置矩阵-逆矩阵-分块矩阵\n空间描述和变换2 复杂姿态描述 上一节我们用旋转矩阵来描述姿态，但仅限于绕其中一个主轴的单自由度旋转，且我们得知姿态描述中包含三个独立变量，接下来我们讨论如何用三个参数描述空间中的任意姿态\n任何三自由度的旋转都可以拆解成三个单自由度的旋转，由于旋转不满足交换律，所以多次旋转的先后顺序需要明确定义。而旋转转轴也需要明确定义，围绕方向固定不动的参考坐标系主轴旋转的拆解方式称为固定角（Fixed Angles），围绕转动坐标系当下的主轴旋转的拆解方式称为欧拉角（Euler Angles）\nX-Y-Z固定角 给定参考坐标系$\\{A\\}$和我们要描述姿态的坐标系$\\{B\\}$，从固定角的视角来看，任意姿态的$\\{B\\}$都可以由以下过程表示：将$\\{B\\}$与$\\{A\\}$重合，先绕$\\hat{X}_A$旋转$\\gamma$角，再绕$\\hat{Y}_A$旋转$\\beta$角，最后绕$\\hat{Z}_A$旋转$\\alpha$角得到最终的$\\{B\\}$，因而可以推导$\\{B\\}$到$\\{A\\}$的等价旋转矩阵：$^A_BR_{XYZ}(\\gamma,\\beta,\\alpha)=R_Z(\\alpha)R_Y(\\beta)R_X(\\gamma)=\\begin{bmatrix}c\\alpha\u0026-s\\alpha\u00260\\\\s\\alpha\u0026c\\alpha\u00260\\\\0\u00260\u00261\\end{bmatrix}\\begin{bmatrix}c\\beta\u00260\u0026s\\beta\\\\0\u00261\u00260\\\\-s\\beta\u00260\u0026c\\beta\\end{bmatrix}\\begin{bmatrix}1\u00260\u00260\\\\0\u0026c\\gamma\u0026-s\\gamma\\\\0\u0026s\\gamma\u0026c\\gamma\\end{bmatrix}$\n（矩阵书写顺序与实际旋转操作顺序相反，从旋转一个矢量的角度来看，是因为旋转矩阵乘在矢量的左边，所以右侧的矩阵会先与矢量相乘）\n(等价旋转矩阵下标表示绕主轴旋转的操作顺序，可以根据实际情况调换)\n最终得到：\n$^A_BR_{XYZ}(\\gamma,\\beta,\\alpha)=\\begin{bmatrix}c\\alpha c\\beta\u0026c\\alpha c\\beta s\\gamma-s\\alpha c\\gamma\u0026c\\alpha s\\beta c\\gamma+s\\alpha s\\gamma\\\\s\\alpha c\\beta\u0026s\\alpha s\\beta s\\gamma+c\\alpha c\\gamma\u0026s\\alpha s\\beta c\\gamma-c\\alpha s\\gamma\\\\-s\\beta\u0026c\\beta s\\gamma\u0026c\\beta c\\gamma\\end{bmatrix}$①\n反过来，如果已知旋转矩阵各个元素的数值，逆求三个固定角，令\n$^A_BR_{XYZ}(\\gamma,\\beta,\\alpha)=\\begin{bmatrix}r_{11}\u0026r_{12}\u0026r_{13}\\\\r_{21}\u0026r_{22}\u0026r_{23}\\\\r_{31}\u0026r_{32}\u0026r_{33}\\end{bmatrix}$\n则\n$\\left\\{\\begin{matrix}\\beta=\\mathrm{Atan2}(-r_{31},\\sqrt{r_{11}^2+r_{21}^2})\\\\ \\alpha=\\mathrm{Atan2}(\\frac{r_{21}}{c\\beta},\\frac{r_{11}}{c\\beta})\\\\ \\gamma=\\mathrm{Atan2}(\\frac{r_{31}}{c\\beta},\\frac{r_{33}}{c\\beta})\\end{matrix}\\right.$\n$(\\beta\\neq 90^{\\circ})$\n（式中$\\mathrm{Atan2}(y,x)=arctan\\frac{y}{x}$，即反正切函数的双参量表示法，可以根据$x$和$y$的符号判别角的象限，而单输入值的反正切函数无法区分）\n上式中$\\cos\\beta$只考虑正根以得到单解来建立各种姿态表示法之间一一对应的映射函数，但在某些情况下有必要求出所有的解，会在第四章说明\n如果$\\beta=90^{\\circ}$，则只能求出$\\alpha$和$\\gamma$的和或差，在这种情况下一般取$\\alpha=0$，$\\gamma=\\left\\{\\begin{matrix}\\mathrm{Atan2}(r_{12},r_{22})(\\beta=90^{\\circ})\\\\-\\mathrm{Atan2}(r_{12},r_{22})(\\beta=-90^{\\circ})\\end{matrix}\\right.$\n结合式①即可理解求解公式的推导\nZ-Y-X欧拉角 给定参考坐标系$\\{A\\}$和我们要描述姿态的坐标系$\\{B\\}$，从欧拉角的视角来看，任意姿态的$\\{B\\}$都可以由以下过程表示：将$\\{B\\}$与$\\{A\\}$重合，先绕$\\hat{Z}_B$转$\\alpha$角得到$\\{B'\\}$，再绕$\\hat{Y}_{B'}$转$\\beta$角得到$\\{B''\\}$，最后绕$\\hat{X}_{B''}$转$\\gamma$角得到最终的$\\{B\\}$（欧拉角选取转轴的顺序与固定角相反，原因会在下面解释）\n借由$\\{B\\}$的中间状态$\\{B'\\}$和$\\{B''\\}$和欧拉角的定义表达$^A_BR$，我们可以写出：\n$^A_BR=^A_{B'}R^{B'}_{B''}R^{B''}_{B}R$\n即：\n$^A_BR_{X'Y'Z'}(\\gamma,\\beta,\\alpha)=R_{Z'}(\\alpha)R_{Y'}(\\beta)R_{X'}(\\gamma)=\\begin{bmatrix}c\\alpha\u0026-s\\alpha\u00260\\\\s\\alpha\u0026c\\alpha\u00260\\\\0\u00260\u00261\\end{bmatrix}\\begin{bmatrix}c\\beta\u00260\u0026s\\beta\\\\0\u00261\u00260\\\\-s\\beta\u00260\u0026c\\beta\\end{bmatrix}\\begin{bmatrix}1\u00260\u00260\\\\0\u0026c\\gamma\u0026-s\\gamma\\\\0\u0026s\\gamma\u0026c\\gamma\\end{bmatrix}$\n相乘后得：\n$^A_BR_{X'Y'Z'}(\\gamma,\\beta,\\alpha)=\\begin{bmatrix}c\\alpha c\\beta\u0026c\\alpha c\\beta s\\gamma-s\\alpha c\\gamma\u0026c\\alpha s\\beta c\\gamma+s\\alpha s\\gamma\\\\s\\alpha c\\beta\u0026s\\alpha s\\beta s\\gamma+c\\alpha c\\gamma\u0026s\\alpha s\\beta c\\gamma-c\\alpha s\\gamma\\\\-s\\beta\u0026c\\beta s\\gamma\u0026c\\beta c\\gamma\\end{bmatrix}$\n我们发现，这个结果与以相反顺序绕固定轴旋转三次得到的结果完全相同，因而逆求解公式也相同\n可以这样更深地理解固定角与欧拉角之间的关系：两种姿态描述方法不同的解释在于运用了旋转矩阵两种不同的作用，一是在同一个坐标系下旋转矢量，二是将矢量的坐标在不同坐标系之间变换。固定角是用前者描述$\\{A\\}$的三个主轴矢量旋转到$\\{B\\}$的过程，而欧拉角是用后者将在$\\{B\\}$下的主轴矢量坐标一步步借由中间坐标系变换到$\\{A\\}$\n其他转角组合 在实际情况我们会遇到更多按不同顺序进行绕主轴的三个旋转，所有排列总共24种，固定角12种，欧拉角12种，都被称为转交排列设定法（需要注意第一次转动和最后一次转动绕同一个主轴也是一种排列，只要保证相邻两次切换围绕的主轴即可）\n除此之外，姿态描述还有轴角表示法和四元数表示法，完全解释篇幅较长，若有余力我会写拓展专题\n映射（Mapping） 映射是将矢量从一个坐标系投影到另一个坐标系的变换\n坐标平移 我们用矢量$^AP_{BORG}$表示$\\{B\\}$的原点相对于$\\{A\\}$的位置\n当$\\{A\\}$与$\\{B\\}$姿态相同，位置不同时，由矢量加法的几何意义：\n$^AP=^BP+^AP_{BORG}$\n坐标旋转 当$\\{A\\}$与$\\{B\\}$位置相同，姿态不同时，由上一篇所介绍的旋转矩阵转换矢量坐标的作用：\n$^AP=^A_BR^BP$\n一般变换 当$\\{A\\}$与$\\{B\\}$位置和姿态都不同时，可以先将$\\{B\\}$旋转到和$\\{A\\}$相同的姿态得到$\\{B'\\}$，以$\\{B'\\}$为中间坐标系对$^BP$进行旋转变换，再作$\\{B'\\}$到$\\{A\\}$的平移变换：\n$^AP=^A_BR^BP+^AP_{BORG}$②\n为了简化算式，我们将平移和旋转整合起来，定义齐次变换矩阵：\n$^A_BT=\\begin{bmatrix}^A_BR\u0026^AP_{BORG}\\\\\\mathbf{0}^T\u00261\\end{bmatrix}$\n其中$\\mathbf{0}^T$表示三维零向量的转置\n这样式②可写为：\n$\\begin{bmatrix}^AP\\\\1\\end{bmatrix}=\\begin{bmatrix}^A_BR\u0026^AP_{BORG}\\\\\\mathbf{0}^T\u00261\\end{bmatrix}\\begin{bmatrix}^BP\\\\1\\end{bmatrix}$\n这样我们就以一个简单的矩阵形式表示了一般变换的旋转和平移\n复合变换 复合变换借用中间坐标系求解两坐标系的相对关系\n例如已知$\\{C\\}$相对于$\\{B\\}$，并且已知$\\{B\\}$相对于$\\{A\\}$，已知$^CP$求$^AP$，可先将$^CP$变换成$^BP$再变换成$^AP$：\n$^BP=^B_CT^CP$\n$^AP=^A_BT^BP=^A_BT^B_CT^CP$\n由此定义$^A_CP=^A_BT^B_CT$\n逆变换 已知$^A_BT$求$^B_AT$可以直接对$^A_BT$求逆矩阵，但还可以利用变换的性质\n关于$^B_AT$的旋转变换，由旋转矩阵的性质可知$^B_AR=^A_BR^T$\n关于$^B_AT$的平移变换，将$^AP_{BORG}$变换成$\\{B\\}$中的描述：$^B(^AP_{BORG})=^B_AT^AP_{BORG}=^B_AR^AP_{BORG}+^BP_{AORG}$\n上式左侧为零，可得：$^BP_{AORG}=-^B_AR^AP_{BORG}=-^A_BR^T{}^AP_{BORG}$\n由此$^B_AT=\\begin{bmatrix}^B_AR^T\u0026-^A_BR^T{}^AP_{BORG}\\\\\\mathbf{0}^T\u00261\\end{bmatrix}=^A_BT^{-1}$\n变换方程 图中$\\{D\\}$可以用两种不同的方式表达成变换相乘的方式：\n$^U_DT=^U_AT^A_DT$\n$^U_DT=^U_BT^B_CT^C_DT$\n两个表达式构造成一个变换方程：\n$^U_AT^A_DT=^U_BT^B_CT^C_DT$\n如有$n$个未知变换和$n$个变换方程，变换可由变换方程解出。设上式中所有变换除了$^B_CT$外均已知，可解出：\n$^B_CT=^U_BT^{-1}{}^U_AT^A_DT^C_DT^{-1}$\n算子（Operator） 算子是对矢量进行平移和旋转操作的变换\n$^A_BT$除了变换以外，也可以充当算子对矢量或点进行平移或转动\n平移算子 将$^AP_1$指向的点沿$^AQ$进行平移得到一个新的矢量$^AP_2$，计算如下：\n$^AP_2=^AP_1+^AQ$\n用矩阵算子写出平移变换，有：\n$^AP_2=D(Q)^AP_1$\n算子$D_Q$可以被看成是一个特殊形式的齐次变换：\n$D(Q)=\\begin{bmatrix}I\u0026^AQ\\\\\\mathbf{0}^T\u00261\\end{bmatrix}$\n旋转算子 由上一篇所介绍的旋转矩阵描述刚体转动状态的作用，可以得到旋转算子的定义：将矢量$^AP_1$用旋转$R$变换成一个新的矢量$^AP_2$\n当一个旋转矩阵作为算子时无需写出上下标，因为不涉及两个坐标系，但我们将用另一个符号说明是绕哪个轴旋转的，写成：\n$^AP_2=R_K(\\theta)^AP_1$\n符号$R_K(\\theta)$是一个旋转算子，表示绕$\\hat{K}$轴旋转$\\theta$角度，例如绕$\\hat{Z}$轴旋转$\\theta$的算子：\n$R_z(\\theta)=\\begin{bmatrix}c\\theta\u0026-s\\theta\u00260\u00260\\\\s\\theta\u0026c\\theta\u00260\u00260\\\\0\u00260\u00261\u00260\\\\0\u00260\u00260\u00261\\end{bmatrix}$\n变换算子 与一般变换一样，将平移和旋转整合起来我们得到通用的变换算子。因为只涉及一个坐标系，所以没有上下标。算子$T$将矢量$^AP_1$平移并旋转得到一个新矢量：$^AP_2=T^AP_1$\n齐次变换矩阵 源于旋转矩阵在上一篇所讲的三个作用，在这一篇我们也探索出了齐次变换矩阵的三个作用：\n1.描述位姿：$^A_BT$表示$\\{B\\}$相对于$\\{A\\}$，其中$^A_BR$的各列是定义$\\{B\\}$主轴方向的单位矢量，$^AP_{BORG}$确定了$\\{B\\}$的原点\n2.变换映射：$^A_BT$是映射$^BP\\rightarrow^AP$\n3.变换算子：$^A_BT$将$^AP_1$变换为$^AP_2$\n本章我们只考虑了位置矢量的变换，而速度矢量和力矢量由于类型不同，它们的变换形式也不同，将在第五章讨论\n本章完\n","date":"2024-11-03T00:00:00Z","permalink":"https://INKEM.github.io/p/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%AF%BC%E8%AE%BAep2.2.%E7%A9%BA%E9%97%B4%E6%8F%8F%E8%BF%B0%E5%92%8C%E5%8F%98%E6%8D%A2-2/","title":"【机器人学导论】Ep2.2.空间描述和变换-2"},{"content":" 主要参考学习资料：\n《机器人学导论（第4版）》John J.Craig著\n台大机器人学之运动学——林沛群（本文插图来自该课程课件）\n本章前置知识：矢量和矩阵的四则运算-单位矩阵-转置矩阵-逆矩阵-正交矩阵\n空间描述和变换 描述 我们用$\\{A\\}$来表示一个坐标系(Frame)\n讨论问题之前，我们需要建立一个世界坐标系(World Frame)，之后定义的位置和姿态都是参照世界坐标系定义的笛卡尔坐标系\n一个平面中的物体拥有沿$x$轴、$y$轴两个方向移动的自由度和绕垂直于平面的轴转动的自由度（Degree Of Freedom，可简记为DOF），即两个移动自由度和一个转动自由度，共三个自由度\n同理，一个空间中的物体拥有沿$x$轴、$y$轴、$z$轴三个方向移动的自由度和绕这三个轴转动的自由度，即三个移动自由度和三个转动自由度，共六个自由度\n位置描述 位置描述涵盖刚体在三个方向上的移动自由度\n一旦建立了坐标系，我们可以用一个$3\\times 1$的位置矢量给世界坐标系中的任何点定位\n矢量用一个左上标来表明其定义在哪个坐标系，例如$^AP$的元素数值是沿坐标系$\\{A\\}$三个主轴方向上的投影，矢量的各个元素用下标$x$、$y$和$z$来标明：\n$^AP=^A\\begin{bmatrix}p_x\\\\p_y\\\\p_z\\end{bmatrix}$\n（其中矩阵左上标表示矩阵中坐标都是相对于该坐标系而言，由于格式输入限制位置偏下）\n姿态描述 姿态描述涵盖刚体三个方向上的转动自由度\n我们可以在刚体上固定一个坐标系$\\{B\\}$，用$\\{B\\}$相对于$\\{A\\}$的描述来表示物体的姿态，而$\\{B\\}$可以用该坐标系三个主轴方向的单位矢量来确定\n我们用$\\hat{X}_B$、$\\hat{Y}_B$和$\\hat{Z}_B$来表示$\\{B\\}$主轴方向的单位矢量，当$\\{A\\}$作为参考坐标系时，它们被写为$^A\\hat{X}_B$、$^A\\hat{Y}_B$和$^A\\hat{Z}_B$\n将这三个单位矢量按照$^A\\hat{X}_B$、$^A\\hat{Y}_B$和$^A\\hat{Z}_B$的顺序排列组成一个$3\\times3$的矩阵，称为旋转矩阵(Rotation Matrix)。表达$\\{B\\}$相对于$\\{A\\}$的旋转矩阵记为$_B^AR$\n$_B^AR$=$\\begin{pmatrix}^A\\hat{X}_B\u0026^A\\hat{Y}_B\u0026^A\\hat{Z}_B\\end{pmatrix}$\n又$^A\\hat{X}_B$、$^A\\hat{Y}_B$和$^A\\hat{Z}_B$是以$\\{A\\}$为参考，所以矢量中各个元素的数值为$\\hat{X}_B$、$\\hat{Y}_B$和$\\hat{Z}_B$分别在$\\{A\\}$三个主轴方向上的投影长度，因而上式可以进一步写为\n$_B^AR=\\begin{pmatrix}^A\\hat{X}_B\u0026^A\\hat{Y}_B\u0026^A\\hat{Z}_B\\end{pmatrix}=\\begin{bmatrix}\\hat{X}_B\\cdot\\hat{X}_A\u0026\\hat{Y}_B\\cdot\\hat{X}_A\u0026\\hat{Z}_B\\cdot\\hat{X}_A\\\\\\hat{X}_B\\cdot\\hat{Y}_A\u0026\\hat{Y}_B\\cdot\\hat{Y}_A\u0026\\hat{Z}_B\\cdot\\hat{Y}_A\\\\\\hat{X}_B\\cdot\\hat{Z}_A\u0026\\hat{Y}_B\\cdot\\hat{Z}_A\u0026\\hat{Z}_B\\cdot\\hat{Z}_A\\end{bmatrix}$\n又矩阵中各个矢量均为单位矢量，点积之值也是$\\hat{X}_B$、$\\hat{Y}_B$和$\\hat{Z}_B$对于$\\{A\\}$的方向余弦，该矩阵又称为方向余弦矩阵(Direction Cosine Matrix)\n综上，我们用旋转矩阵描述了刚体的姿态\n旋转矩阵 接下来重点介绍旋转矩阵的性质与作用\n性质 将旋转矩阵中各个点积前后矢量互换，我们有如下推导（其中右上标T为转置符号）：\n$_B^AR=\\begin{pmatrix}^A\\hat{X}_B\u0026^A\\hat{Y}_B\u0026^A\\hat{Z}_B\\end{pmatrix}=\\begin{bmatrix}\\hat{X}_B\\cdot\\hat{X}_A\u0026\\hat{Y}_B\\cdot\\hat{X}_A\u0026\\hat{Z}_B\\cdot\\hat{X}_A\\\\\\hat{X}_B\\cdot\\hat{Y}_A\u0026\\hat{Y}_B\\cdot\\hat{Y}_A\u0026\\hat{Z}_B\\cdot\\hat{Y}_A\\\\\\hat{X}_B\\cdot\\hat{Z}_A\u0026\\hat{Y}_B\\cdot\\hat{Z}_A\u0026\\hat{Z}_B\\cdot\\hat{Z}_A\\end{bmatrix}$ $=\\begin{bmatrix}\\hat{X}_A\\cdot\\hat{X}_B\u0026\\hat{X}_A\\cdot\\hat{Y}_B\u0026\\hat{X}_A\\cdot\\hat{Z}_B\\\\\\hat{Y}_A\\cdot\\hat{X}_B\u0026\\hat{Y}_A\\cdot\\hat{Y}_B\u0026\\hat{Y}_A\\cdot\\hat{Z}_B\\\\\\hat{Z}_A\\cdot\\hat{X}_B\u0026\\hat{Z}_A\\cdot\\hat{Y}_B\u0026\\hat{Z}_A\\cdot\\hat{Z}_B\\end{bmatrix}=\\begin{bmatrix}\\hat{X}_A{^T}\\\\\\hat{Y}_A{^T}\\\\\\hat{Z}_A{^T}\\end{bmatrix}$$=\\begin{pmatrix}^A\\hat{X}_B\u0026^A\\hat{Y}_B\u0026^A\\hat{Z}_B\\end{pmatrix}^T=^B_AR^T$\n由此$^A_BR=^B_AR^T$\n又由：\n$^A_BR{^T}^A_BR=\\begin{bmatrix}\\hat{X}_A{^T}\\\\\\hat{Y}_A{^T}\\\\\\hat{Z}_A{^T}\\end{bmatrix}\\begin{pmatrix}^A\\hat{X}_B\u0026^A\\hat{Y}_B\u0026^A\\hat{Z}_B\\end{pmatrix}=I_3$\n其中$I_3$是$3\\times3$的单位矩阵，因此：\n$^A_BR=^B_AR^{-1}=^B_AR{^T}$\n即$^B_AR$的转置矩阵等于它的逆矩阵，又同时等于$^A_BR$。由线性代数可知，前者是正交矩阵的性质\n旋转矩阵有九个数字，但只有三个矢量两两垂直、均为单位矢量总共六个条件约束，因此只有三个数字是独立变量，与空间中转动具有三个自由度相符\n作用 除了前文所讲的描述一个刚体的姿态外，旋转矩阵还有两个作用\n1.转换矢量的坐标\n矢量$P$相对于$\\{B\\}$的坐标表示：$^BP=^Bp_x\\hat{X}_B+^Bp_y\\hat{Y}_B+^Bp_z\\hat{Z}_B$\n矢量$P$相对于$\\{A\\}$的坐标表示：$^AP=^Ap_x\\hat{X}_A+^Ap_y\\hat{Y}_A+^Ap_z\\hat{Z}_A$\n$^BP$和$^AP$只是坐标表示不同，本质上是同一个矢量，由此矢量$P$相对于$\\{A\\}$的坐标也可以用$^BP$在$\\{A\\}$三个主轴上的投影计算：\n$^Ap_x=^BP\\hat{X}_A=^Bp_x\\hat{X}_B\\hat{X}_A+^Bp_y\\hat{Y}_B\\hat{X}_A+^Bp_z\\hat{Z}_B\\hat{X}_A$\n$^Ap_y=^BP\\hat{Y}_A=^Bp_x\\hat{X}_B\\hat{Y}_A+^Bp_y\\hat{Y}_B\\hat{Y}_A+^Bp_z\\hat{Z}_B\\hat{Y}_A$\n$^Ap_z=^BP\\hat{X}_A=^Bp_x\\hat{X}_B\\hat{Z}_A+^Bp_y\\hat{Y}_B\\hat{Z}_A+^Bp_z\\hat{Z}_B\\hat{Z}_A$\n用矩阵表示则为：\n$^AP=^A\\begin{bmatrix}p_x\\\\p_y\\\\p_z\\end{bmatrix}=\\begin{bmatrix}\\hat{X}_B\\cdot\\hat{X}_A\u0026\\hat{Y}_B\\cdot\\hat{X}_A\u0026\\hat{Z}_B\\cdot\\hat{X}_A\\\\\\hat{X}_B\\cdot\\hat{Y}_A\u0026\\hat{Y}_B\\cdot\\hat{Y}_A\u0026\\hat{Z}_B\\cdot\\hat{Y}_A\\\\\\hat{X}_B\\cdot\\hat{Z}_A\u0026\\hat{Y}_B\\cdot\\hat{Z}_A\u0026\\hat{Z}_B\\cdot\\hat{Z}_A\\end{bmatrix}^B\\begin{bmatrix}p_x\\\\p_y\\\\p_z\\end{bmatrix}=^A_BR^BP$\n由此得到$\\{B\\}$相对于$\\{A\\}$的旋转矩阵可以将$P$的表示由相对于$\\{B\\}$转换为相对于$\\{A\\}$\n2.描述刚体转动的状态\n分别研究坐标系绕三个主轴旋转的状态\n以$\\{A\\}$绕$\\hat{Z}_A$逆时针旋转$\\theta$（以后不标明旋转方向默认为逆时针旋转）得到$\\{B\\}$为例，计算此时$\\{B\\}$相对于$\\{A\\}$的旋转矩阵得：\n$^A_BR=\\begin{bmatrix}\\cos\\theta\u0026-\\sin\\theta\u00260\\\\\\sin\\theta\u0026\\cos\\theta\u00260\\\\0\u00260\u00261\\end{bmatrix}=\\begin{bmatrix}c\\theta\u0026-s\\theta\u00260\\\\s\\theta\u0026c\\theta\u00260\\\\0\u00260\u00261\\end{bmatrix}$\n（由于我们将在计算中用到许多三角函数，因此三角函数用对应首字母简记）\n由此，我们将绕$\\hat{Z}_A$旋转$\\theta$以这种方式计算出来的旋转矩阵记为$R_{\\hat{Z}_A}(\\theta)$，则：\n$R_{\\hat{Z}_A}(\\theta)=\\begin{bmatrix}c\\theta\u0026-s\\theta\u00260\\\\s\\theta\u0026c\\theta\u00260\\\\0\u00260\u00261\\end{bmatrix}$\n同理得到：\n$R_{\\hat{X}_A}(\\theta)=\\begin{bmatrix}1\u00260\u00260\\\\0\u0026c\\theta\u0026-s\\theta\\\\0\u0026s\\theta\u0026c\\theta\\end{bmatrix}$\n$R_{\\hat{Y}_A}(\\theta)=\\begin{bmatrix}c\\theta\u00260\u0026s\\theta\\\\0\u00261\u00260\\\\-s\\theta\u00260\u0026c\\theta\\end{bmatrix}$\n通过接下来的例子我们来理解这类旋转矩阵如何描述刚体转动的状态\n$^AP=^A(p_x\\;p_y\\;p_z)^T$对$\\hat{X}_A$旋转$\\theta$得到$^AP'$，$^AP'=?$\n不妨让$\\{A\\}$跟着$^AP$同步旋转，得到$\\{A'\\}$，那么$^AP'$相对于$\\{A'\\}$的坐标跟$^AP$相对于$\\{A\\}$的坐标相等，而后者已知\n又通过题目条件和前文定义我们知道$^A_{A'}R=R_{\\hat{X}_A}(\\theta)=\\begin{bmatrix}1\u00260\u00260\\\\0\u0026c\\theta\u0026-s\\theta\\\\0\u0026s\\theta\u0026c\\theta\\end{bmatrix}$\n利用旋转矩阵转换矢量坐标的作用，我们可以把$^AP'$相对于$\\{A'\\}$的坐标转换为相对于原坐标系$\\{A\\}$的坐标，即：\n$^AP'=^A_{A'}R^AP=R_{\\hat{X}_A}(\\theta)^AP$\n所以旋转矩阵$R(\\theta)$可以计算矢量在同一坐标系下旋转后的坐标\n位姿描述 位置和姿态的组合称为位姿\n我们同样用$\\{A\\}$来表示一个位姿\n以$\\{A\\}$为参考描述位姿$\\{B\\}$，结合前文的位置描述和姿态描述，我们用$^A_BR$表示$\\{B\\}$的姿态，用$^AP_{BORG}$表示$\\{B\\}$的原点的位置矢量（下标ORG意为原点origin），于是位姿描述记为：\n$\\{B\\}=\\{^A_BR,{\\,}^AP_{BORG}\\}$\n下一篇文章将讲述本章后半部分空间中的变换内容\n","date":"2024-11-01T00:00:00Z","permalink":"https://INKEM.github.io/p/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%AF%BC%E8%AE%BAep2.1.%E7%A9%BA%E9%97%B4%E6%8F%8F%E8%BF%B0%E5%92%8C%E5%8F%98%E6%8D%A2-1/","title":"【机器人学导论】Ep2.1.空间描述和变换-1"},{"content":" 主要参考学习资料：\n《机器人学导论（第4版）》John J.Craig著\n台大机器人学之运动学——林沛群\n前置课程：博主目前只对线性代数和理论力学方面有一定基础，学习过程中遇到额外必要的前置知识我会做补充或者开辟新的知识笔记专栏\n概述 本章简要介绍机器人学导论中的基础名词和学习内容，具体内容将在后续展开\n知识体系 本知识笔记以《机器人学导论》一书为主，书中内容结构如下：\n第1章 概述\n第2章 空间描述和变换\n第3章 操作臂运动学\n第4章 操作臂逆运动学\n第5章 雅可比：速度和静力\n第6章 操作臂动力学\n第7章 轨迹生成\n第8章 操作臂的机构设计\n第9章 操作臂的线性控制\n第10章 操作臂的非线性控制\n第11章 操作臂的力控制\n第12章 机器人编程语言及编程系统\n第13章 离线编程系统\n操作臂的力学与控制 在机器人领域，机械臂（操作臂）是起步最早、现今最成熟的技术，而机器人学知识也跟随此路线发展而来，因此对机器人知识的学习从机械臂开始\n以下内容将按顺序在书中后面12个章节一一讨论\n位置和姿态的描述 研究机器人学需要考虑三维空间中物体的空间状态，可以用两个重要特性描述：位置和姿态\n为了用数学方法表示和计算这些参量，我们一般在物体上设置一个坐标系（位姿），然后在某个参考坐标系中描述该位姿的位置和姿态\n任意位姿都能用作参考坐标系，因此我们经常将物体空间属性的描述从一个位姿变换到另一个位姿 操作臂正运动学 运动学研究物体的运动而不考虑引起这种运动的力，操作臂运动学的研究对象为运动的全部几何和时间特性（位置、速度、加速度和位置变量对于其他变量的高阶微分）\n大部分操作臂由刚性连杆组成，相邻连杆由关节连接，允许相对转动\n如果是转动关节，两个相邻连杆的相对位移被称为关节角；如果是滑（移）动关节，位移被称为关节偏移量\n操作臂自由度的个数是使操作臂具有确定运动时必须给出的独立运动的数目，或操作臂独立驱动的关节数\n组成操作臂运动链的自由端称为末端执行器，通常采用末端执行器上的工具坐标系相对于操作臂固定底座的基坐标系来描述操作臂的位置\n正运动学根据已知的各个关节的关节角计算末端执行器的位置和姿态，这个过程被称为从关节空间描述到笛卡尔空间描述的操作臂位置表示\n笛卡尔空间：用三个变量描述空间一点的位置，用另外三个变量描述物体的姿态\n操作臂逆运动学 逆运动学根据给定的末端执行器的位置和姿态计算所有关节可达到给定位置和姿态的关节角\n逆运动学计算涉及的运动学方程的解的存在性定义了操作臂的工作空间 （末端执行器活动范围） 速度，静力，奇异点 除了静态定位问题，对于运动中的操作臂，我们定义雅可比矩阵来方便地进行机构的速度分析\n雅可比矩阵定义了从关节空间速度向笛卡尔空间速度的映射\n在奇异点，这种映射不可逆（给定的末端执行器的运动状态超出了关节运动能力的限制），同时某些关节的运动可能无法引起末端执行器的有效运动，称为局部退化\n当操作臂接触工件或工作面，并施加一个静力，需要解决如何设定关节力矩来产生要求的接触力和力矩\n动力学 动力学研究产生运动所需要的力\n控制操作臂末端执行器的运动速度需要关节驱动器产生一组复杂的扭矩函数来实现，取决于末端执行器的运动路径和速度、连杆的质量特性和负载、关节摩擦等，扭矩函数通过操作臂动力学方程来求解，用于操作臂的控制和仿真\n轨迹生成 计算每个关节运动的连续函数来平稳控制操作臂从一点运动到另外一点的过程为轨迹生成\n操作臂从起点到目标点需要确定一些中间路径点，通过一系列路径点的连续函数被称为样条函数\n笛卡尔轨迹生成将末端执行器的期望运动转化为一系列等效的关节运动 操作臂设计与传感器 为特定任务设计的机器人为专用机器人，能够完成各种任务的为通用机器人。从经济角度考虑，操作臂的机械设计由期望执行的任务决定，设计者需考虑几何尺寸、速度、承载能力、关节的数量与几何布局等因素，这些因素影响了操作臂工作空间的大小和性质、操作臂结构的刚度以及其他属性\n完整的操作臂设计还包括：驱动器的选择和位置、传动系统以及内部位置传感器（有时是力传感器）\n线性位置控制 位置控制系统不仅包括理想状态下产生期望运动的力矩的计算，更要考虑自动补偿由于系统参数引起的误差以及抑制引起系统偏离期望轨迹的扰动。为此，通过控制算法对位置和速度传感器进行检测，计算出驱动器的扭矩指令。第9章讨论基于操作臂动力学的线性近似得出的控制算法\n非线性位置控制 考虑操作臂完整的非线性动力学的非线性控制算法，比简单的线性控制方法性能更好\n力控制 当操作臂在自由空间中运动时，只有位置控制有意义\n当接触零件、工具或工作表面时，操作臂控制力的能力极其重要\n当操作臂在部分方向受到作用表面约束时，需要采用混合控制方式，在某些方向用位置控制规律来控制，而其余方向用力控制规律来控制\n机器人编程 机器人编程语言是用户和工业机器人交互的接口\n操作者指定操作臂末端执行器的一个特殊点为操作点，也叫TCP（工具中心点）\n通过一系列路径点确定路径，同时确定不同路径段上TCP的速度，依据这些输入，轨迹生成算法规划处机器人运动的所有细节。轨迹生成的输入问题由机器人编程语言的指令来给出\n离线编程与仿真 离线编程系统是一种机器人编程环境，可以在不需要机器人停机的状态下对机器人进行编程，也可以在没有做出机器人实物的情况下对机器人设计进行仿真\n本章完\n","date":"2024-10-30T00:00:00Z","permalink":"https://INKEM.github.io/p/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E5%AF%BC%E8%AE%BAep1.%E6%A6%82%E8%BF%B0/","title":"【机器人学导论】Ep1.概述"},{"content":" 本学习笔记主要是为了拓展工程实践可能会应用到的相关知识，帮助了解和查阅知识体系、相关概念和基本思想，非以数学专业方向为主，因此不会探讨进一步的数学问题，甚至文中涉及到的部分知识也无需完全掌握，用抽象而严谨的数学语言表达的内容我会尽可能用自然语言（文中斜体字）或绘图辅助理解（本章多值函数部分教材讲解篇幅较长且理解耗时，文中该内容有大量精简消化，未用斜体字标明）\n前置课程：微积分（高等数学/数学分析）\n自学教材：《复变函数论（第五版）》钟玉泉 编\n解析函数 §1 解析函数的概念与柯西-黎曼方程 1.复变函数的导数与微分 复变函数的导数\n设函数$\\varpi=f(z)$在点$z_0$的邻域内或包含$z_0$的区域$D$内有定义，如果当$z$按任意方式趋于$z_0$，即当$\\Delta z$按任意方式趋于零时，比值$\\frac{\\Delta\\varpi}{\\Delta z}$的极限都存在，且其值有限，则称此极限为函数$f(z)$在点$z_0$的导数，并记为$f'(z_0)$，即\n$$f'(z_0)=\\lim_{\\Delta z\\rightarrow 0}\\frac{\\Delta\\varpi}{\\Delta z}=\\lim_{z\\rightarrow z_0}\\frac{f(z)-f(z_0)}{z-z_0}$$这时称函数$f(z)$于点$z_0$可导\n复变函数的微分\n设函数$\\varpi=f(z)$在点$z$可导，于是\n$\\lim_{\\Delta z\\rightarrow 0}\\frac{\\Delta\\varpi}{\\Delta z}=f'(z)$\n$\\frac{\\Delta\\varpi}{\\Delta z}=f'(z)+\\eta,\\;\\lim_{\\Delta z\\rightarrow 0}\\eta=0$\n$\\Delta\\varpi=f'(z)\\Delta z+\\varepsilon$\n其中$|\\varepsilon\\cdot\\Delta z|$为比$|\\Delta z|$高阶的无穷小\n称$f'(z)\\Delta z$为$\\varpi=f(z)$在点$z$的微分，记为$d\\varpi$或$df(z)$，此时也称$f(z)$在点$z$可微，即$d\\varpi=f'(z)\\Delta z$\n可导$\\Leftrightarrow$可微$\\Rightarrow$连续\n2.解析函数及其简单性质 解析函数\n如果函数$\\varpi=f(z)$在区域$D$内可微，则称$f(z)$为区域$D$内的解析函数\n区域$D$内的解析函数也称为$D$内的全纯函数或正则函数\n若函数$f(z)$在点$z_0$不解析，但在$z_0$的任一邻域内总有$f(z)$的解析点，则称$z_0$为函数$f(z)$的奇点\n解析函数的性质\n$(1)$函数在一点解析，则其各阶导数也在该点解析\n$(2)$如函数$f_1(z),\\,f_2(z)$在区域$D$内解析，则其和、差、积、商（商要求分母在$D$内不为零）在$D$内解析，并且求导公式和一元实函数一致\n$(3)$复合函数的求导法则：设函数$\\xi=f(z)$在区域$D$内解析，函数$\\varpi=g(\\xi)$在区域$G$内解析，若对于$D$内每一点$z$，函数$f(z)$的值$\\xi$均属于$G$，则$\\varpi=g[f(z)]$在$D$内解析，且$\\frac{dg[f(z)]}{dz}=\\frac{dg(\\xi)}{d\\xi}\\cdot\\frac{df(z)}{dz}$\n3.柯西-黎曼方程 柯西-黎曼方程\n假设$\\varpi=f(z)=u(x,\\,y)+iv(x,\\,y)$是复变元$z=x+iy$的一个定义在区域$D$内的函数\n函数$f(z)$可微的条件$\\frac{\\partial u}{\\partial x}=\\frac{\\partial v}{\\partial y},\\;\\frac{\\partial u}{\\partial y}=-\\frac{\\partial v}{\\partial x}$是关于$u$及$v$的偏微分方程组，称为柯西-黎曼方程（简称$C.-\\,R.$方程）\n证明思路：设$\\Delta z=\\Delta x+i\\Delta y$，变点$z+\\Delta z$分别沿平行于实轴和虚轴的方向趋于点$z$的方向导数相等\n可微的充要条件\n设函数$f(z)=u(x,\\,y)+iv(x,\\,y)$在区域$D$内有定义，$f(x,\\,y)$在$D$内一点$z=x+iy$可微的充要条件是\n$(1)$二元函数$u(x,\\,y),\\;v(x,\\,y)$在点$(x,\\,y)$可微\n$(2)$$u(x,\\,y),\\;v(x,\\,y)$在点$(x,\\,y)$满足$C.-\\,R.$方程\n上述条件满足时，$f'(x)=\\frac{\\partial u}{\\partial x}+i\\frac{\\partial v}{\\partial x}$（可利用$C.-\\,R.$方程代换其中的偏导数）\n在区域$D$内解析的充要条件将上述条件中点$(x,\\,y)$改为区域$D$即可\n指数形式可微的充要条件\n若将复数$z$表示成指数形式$z=re^{i\\theta}$，则函数$\\varpi=f(z)$又可表示为$\\varpi=u(r,\\,\\theta)+iv(r,\\,\\theta)$\n若$u(r,\\,\\theta),\\,v(r,\\,\\theta)$可微，且$u_r=\\frac{1}{r}v_\\theta,\\;u_\\theta=-rv_r$，则$f(z)=f(r,\\theta)$可微\n§2 初等解析函数 1.指数函数 对于任何复数$z=x+iy$，我们用关系式$e^z=e^{x+iy}=e^x(\\cos y+i\\sin y)$来定义指数函数$e^z$\n性质\n$(1)|e^z|=e^x\u003e0,\\,arg\\,e^z=y$\n$(2)e^z$在$z$平面上解析，且$(e^z)'=e^z$\n$(3)e^z$是以$2\\pi i$为基本周期的周期函数（$e^{2k\\pi i}=1$）\n2.三角函数与双曲函数 由指数函数定义，当$x=0$时推得$e^{iy}=\\cos y+i\\sin y,\\;e^{-iy}=\\cos y-i\\sin y$\n从而得到$\\sin y=\\frac{e^{iy}-e^{-iy}}{2i},\\;\\cos y=\\frac{e^{iy}+e^{-iy}}{2}$\n因而用$\\sin z=\\frac{e^{iz}-e^{-iz}}{2i},\\;\\cos z=\\frac{e^{iz}+e^{-iz}}{2}$分别定义为$z$的正弦函数和余弦函数\n性质\n$(1)$在$z$平面上解析，且$(\\sin z)'=\\cos z,\\;(\\cos z)'=-\\sin z$\n$(2)\\sin z$是奇函数，$\\cos z$是偶函数，并遵从三角恒等式：\n$\\sin^2z+\\cos^2z=1$\n$\\sin(z_1+z_2)=\\sin z_1\\cdot\\cos z_2+\\cos z_1\\cdot\\sin z_2$\n$\\cos(z_1+z_2)=\\cos z_1\\cdot\\cos z_2-\\sin z_1\\cdot\\sin z_2$\n$(3)$是以$2\\pi$为周期的周期函数\n$(4)\\sin z$的零点为$z=n\\pi\\,(n∈\\mathbb{z})$\n$\\cos z$的零点为$z=(n+\\frac{1}{2}\\pi\\,(n∈\\mathbb{z})$\n$(5)$在复数域内$|\\sin z|\\leq1,\\;|\\cos z|\\leq1$不成立\n定义$\\tan z=\\frac{\\sin z}{\\cos z},\\;\\cot z=\\frac{\\cos z}{\\sin z},\\;\\sec z=\\frac{1}{\\cos z},\\;\\csc z=\\frac{1}{\\sin z}$分别称为$z$的正切函数、余切函数、正割函数及余割函数\n性质\n$(1)$在$z$平面上使分母不为零的点处解析，且\n$(\\tan z)'=\\sec^2z,\\;(\\cot z)'=-\\csc^2z,\\;(\\sec z)'=\\sec z\\cdot\\tan z,\\;(\\csc z)'=-\\csc z\\cdot\\cot z$\n$(2)$正切函数和余切函数的周期为$\\pi$，正割函数和余割函数的周期为$2\\pi$\n定义$\\sinh z=\\frac{e^z-e^{-z}}{2},\\;\\cosh z=\\frac{e^z+e^{-z}}{2},\\;\\tanh z=\\frac{\\sinh z}{\\cosh z},\\;\\coth z=\\frac{1}{\\tanh z},\\;sech\\,z=\\frac{1}{\\cosh z},\\;csch\\,z=\\frac{1}{\\sinh z}$\n分别称为$z$的双曲正弦函数、双曲余弦函数、双曲正切函数、双曲余切函数、双曲正割函数及双曲余割函数\n§3 初等多值函数 设函数$f(z)$在区域$D$内有定义，且对$D$内任意不同的两点$z_1$及$z_2$，都有$f(z_1)\\neq f(z_2)$，则称函数$f(z)$在$D$内是单叶的，并且称区域$D$为$f(z)$的单叶性区域\n区域$D$到区域$G$的单叶满变换$\\varpi=f(z)$就是$D$到$G$的一一变换\n1.辐角函数 辐角函数与辐角改变量\n函数的多值性源于辐角的多值性\n任意一个复数$z(z\\neq0)$有无穷多个辐角，辐角函数$\\varpi=Arg\\,z$是一个多值函数，定义域是$C$\\${0}$\n设$L$是$C$\\${0}$内一条简单曲线，$z_0$是$L$的起点，$z_1$是$L$的终点，当$z$沿$L$从$z_0$连续变动到$z_1$时，$\\overrightarrow{Oz}$所旋转的角称作$Arg,z$在$L$上的改变量，简称**辐角改变量**，记作$\\Delta_LArg,z$\n从$z_0$到$z_1$由于$L$绕原点的方向和圈数不一样，$\\Delta_LArg\\,z$也不一样 在$z_0$取定$Arg\\,z$的一个值记为$arg\\,z$，称为$Arg\\,z$在$z_0$的初值，将$arg\\,z_0+\\Delta_LArg\\,z$称作$Arg\\,z$在$z_0$的终值，记作$arg\\,z$，则$arg\\,z$依赖于起点的初值和辐角改变量\n单值连续函数\n由于多值函数不方便应用，我们希望将$Arg\\,z$分解为若干单值连续函数\n由$arg\\,z=arg\\,z_0+\\Delta_LArg\\,z$可知，对取定的初值$arg\\,z_0$，由于$\\Delta_LArg\\,z$在区域$C$\\${0}$内不唯一，$arg,z$也不唯一。所以需要寻找使$\\Delta_LArg,z$唯一的区域（辐角改变量只与起点、终点位置有关而与曲线形状无关）\n该区域性质与保守场有异曲同工之处，可移用保守场的判定（沿着任何闭合环路积分均为$0$），因此研究简单闭曲线$L\\subset$ $C$\\${0}$，有\n$\\Delta_LArg\\,z=0$，$0$在$L$外部\n$\\Delta_LArg\\,z=2\\pi$，$0$在$L$内部\n因此，只要能使区域内任一简单闭曲线都不围绕原点$z=0$即可，若将复平面$C$沿负实轴剪开成一单连通开区域记为$G$，则$\\Delta_LArg\\,z$只与$L$的起点和终点有关，而与曲线的形状无关\n在$G$内固定起点$z_0$，取定初值$arg\\,z_0$，则$arg\\,z_0+\\Delta_LArg\\,z$就是单值连续函数；取定初值$arg\\,z_0+2\\pi$，得另一个单值连续函数；以此类推，取定初值$arg\\,z_0+2k\\pi$，就在$G$内把$Arg\\,z$分成无穷多个单值连续函数$arg\\,z+2k\\pi,\\;z\\in G,\\,k\\in \\mathbb{Z}$\n2.根式函数 根式函数及其变换\n规定根式函数$\\varpi=\\sqrt[n]{z}$为幂函数$z=\\varpi^n$的反函数\n如果令$z=re^{i\\theta},\\;\\varpi=\\rho e^{i\\varphi}$，可知$\\rho=\\sqrt[n]{r},\\;\\varphi=\\frac{\\theta}{n}$\n即$z$平面到$\\varpi$平面的变换为模长开$n$次方根、辐角除以$n$的变换 根式函数的单叶性区域\n为了寻找其单叶性区域，先限定$Arg\\,z$取$(-\\pi,\\,\\pi)$，则该变化使$z$平面压缩到了$-\\frac{\\pi}{n} \u003c \\varphi \u003c \\frac{\\pi}{n}$的角形区域内，该区域为$\\varpi=\\sqrt[n]{z}$的一个单叶性区域\n同理，当$Arg\\,z$取$(\\pi,3\\pi)$，可划分出第二个单叶性区域$\\frac{\\pi}{n}\u003c\\varphi\u003c\\frac{3\\pi}{n}$，以此类推，当$Arg\\,z$取$(-\\pi+2k\\pi,\\,\\pi+2k\\pi)$时，对应的单叶性区域为$(\\frac{2k\\pi}{n}-\\frac{\\pi}{n})\u003c\\varphi\u003c(\\frac{2k\\pi}{n}+\\frac{\\pi}{n})$，当$k$从$0$取到$n-1$时，得到的所有单叶性区域将$\\varpi$平面填满，此为函数$\\varpi=\\sqrt[n]{z}$单叶性区域的一种分法。总之，幂函数$\\varpi=\\sqrt[n]{z}$的单叶性区域是顶点在原点$z=0$，张度不超过$\\frac{2\\pi}{n}$的角形区域 指数函数的单值解析分支\n只要将$Arg\\,z$的取值区间范围限定在$2\\pi$，所得即为单叶性区域，由前文辐角函数可知，在$z$平面上从原点$O$到点$\\infty$任意引一条射线（或一条通向无穷远点的广义简单曲线）将$z$平面割破，构成一个以此割线为边界的区域，记为$G$，在此区域上指定一点$z_0$取不同的初值$arg\\,z_0$，就能各自得到区域内任意的点$z$唯一的辐角，从而得到\n$$\\varpi_k=(\\sqrt[n]{z})_k=\\sqrt[n]{r(z)}e^{i\\frac{\\theta(z)+2k\\pi}{n}}\\;(z\\in G,\\,k=0,\\,1,\\,…,\\,n-1)$$称为$\\sqrt[n]{z}$的$n$个单值连续分支函数。而分出$\\sqrt[n]{z}$的单值解析分支的割线称为$\\sqrt[n]{z}$的支割线。支割线两侧称为两岸，如果支割线接近于平行$x$轴方向就分成上岸和下岸，如果接近于平行$y$轴方向就分成左岸和右岸 对于$\\varpi_k=(\\sqrt[n]{z})_k$的单值解析分支，有\n$\\frac{\\mathrm{d} }{\\mathrm{d} z}(\\sqrt[n]{z})_k=\\frac{1}{n}\\frac{(\\sqrt[n]{z})_k}{z}\\;(z\\in G,\\,k=0,\\,1,\\,…,\\,n-1)$\n支点\n假设有一点，在此点的充分小邻域内，作一个包围此点的圆周$\\Gamma$，当变点$z$从$\\Gamma$上一点除法，绕$\\Gamma$连续变动一周而回到其出发点时，多值函数从其一支变到另外一支，则该点称为此多值函数的支点（可以理解为该圆周$\\Gamma$跨过了划分单值连续分支函数的支割线），$\\sqrt[n]{z}$以$z=0$和$z=\\infty$为支点，推广到$\\sqrt[n]{z-a}$则以$z=a$和$z=\\infty$为支点\n3.对数函数 规定对数函数$\\varpi=Ln\\,z$为指数函数$e^{\\varpi}=z$的反函数\n如果令${z=re^{i\\theta}},\\;\\varpi=u+iv$，可得$u=\\ln\\,r,\\,v=\\theta+2k\\pi\\,(k\\in\\mathbb{Z})$\n故方程的全部根是$Ln\\,z=\\ln\\,r+i(\\theta+2k\\pi)=\\ln\\,|z|+i(arg\\,z+2k\\pi)\\,(k\\in\\mathbb{Z})$\n当$k$取确定值时，$Ln\\,z$的对应值记为$(\\ln\\,z)_k$\n基本性质\n$Ln(z_1z_2)=Ln\\,z_1+Ln\\,z_2$\n$Ln(\\frac{z_1}{z_2})=Ln\\,z_1-Ln\\,z_2$\n$(z_1,\\,z_2\\neq0,\\,\\infty)$\n对数函数的单值解析分支\n由定义可知$z$的辐角决定$\\varpi$在平面上的纵坐标，$z$平面中取负实轴为割线限定辐角在$(-\\pi,\\,\\pi)$的区域变换为$\\varpi$平面上纵坐标在$(-\\pi,\\,\\pi)$的带形区域，该区域为$\\varpi=Ln\\,z$的一个单叶性区域。总之，对数函数$\\varpi=Ln\\,z$的单叶性区域是宽为$2\\pi$的带形区域 $\\varpi=Ln\\,z$的无穷多个单值连续分支函数为\n$$\\varpi_k=(\\ln\\,z)_k=\\ln\\,r(z)+i[\\theta(z)+2k\\pi]\\;(z\\in G,\\,k\\in\\mathbb{z})$$支点为$z=0$和$z=\\infty$，支割线为连接$z=0$和$z=\\infty$的广义简单曲线，且有\n$\\frac{\\mathrm{d}}{\\mathrm{d}z}(\\ln\\,z)_k=\\frac{1}{z}\\;(z\\in G,\\,k\\in\\mathbb{z})$ 4.一般幂函数与一般指数函数 一般幂函数\n$\\varpi=z^\\alpha=e^{\\alpha Ln\\,z}(z\\ne0,\\,\\infty;\\,\\alpha\\in\\mathbb{R})$称为$z$的一般幂函数\n设$(\\ln\\,z)_0$表示$Ln\\,z$中的任意一个确定的值，则\n$$z^\\alpha=e^{\\alpha Ln\\,z}=e^{\\alpha[(\\ln z)_0+2k\\pi i]}=\\varpi_0e^{2k\\pi i\\alpha}\\;(k\\in\\mathbb{Z})$$其中$\\varpi_0=e^{\\alpha(\\ln z)_0}$表示$z^{\\alpha}$所有的值中的一个\n讨论$\\alpha$的如下三种情形：\n$(1)\\alpha$是一整数$n$，此时$e^{2k\\pi in}=1$，$z^\\alpha$是$z$的单值函数\n$(2)\\alpha$是一有理数$\\frac{q}{p}$，此时$e^{2k\\pi i\\frac{q}{p}}$只能取$k=0,\\,1,\\,2,\\,…,\\,p-1$总共$p$个不同的值（参考根式函数），$z^{\\frac{q}{p}}=\\varpi_0e^{2k\\pi i\\frac{q}{p}},\\;k=0,\\,1,\\,2,\\,…,\\,p-1$\n$(3)\\alpha$是一无理数或虚数，此时$e^{2k\\pi i\\alpha}$有无限个值，$z^\\alpha$是无限多值的\n对$\\varpi=z^\\alpha$的每一分支，有$\\frac{\\mathrm{d}}{\\mathrm{d}z}z^\\alpha=\\alpha z^{\\alpha-1}$\n一般指数函数\n$\\varpi=\\alpha^z=e^{zLn\\,\\alpha}(\\alpha\\ne0,\\infty,为一复常数)$称为一般指数函数，是无穷多个独立的、在$z$平面上单值解析的函数（取决于$Ln\\,\\alpha$的取值）\n5.具有多个有限支点的情形 讨论函数$\\varpi=f(z)=\\sqrt[n]{P(z)}$的支点，其中$P(z)$是任意的$N$次多项式$A(z-a_1)^{\\alpha_1}…(z-a_m)^{\\alpha_m}$\n$a_1,\\,a_2,\\,…,\\,a_m$是$P(z)$的一切相异零点，$\\alpha_1,\\,\\alpha_2,\\,…,\\,\\alpha_m$分别是它们的重数，满足$\\alpha_1+\\alpha_2+…+\\alpha_m=N$\n根据根式函数和复数乘法对复数辐角的改变法则，可知沿一简单闭曲线$C$，$f(z)$的辐角改变量$\\Delta_carg\\,f(z)=\\frac{1}{n}(\\alpha_1\\Delta_carg\\,(z-a_1)+…+\\alpha_m\\Delta_carg\\,(z-a_m))$\n研究简单闭曲线$C$包围相异零点所有组合的情况，可以得到下列结论：\n$(1)f(z)$可能的支点是所有相异零点和$\\infty$\n$(2)$当且仅当$n$不能整除$\\alpha_i$时，$a_i$是$f(z)$的支点\n$(3)$当且仅当$n$不能整除$N$时，$\\infty$是$f(z)$的支点\n$(4)$如果$n$能整除所有重数中若干个之和，则相异零点中对应的那几个就可以连接成割线抱成团，即变点$z$沿只包含这些相异零点在其内部的简单闭曲线转一周后函数值不变。抱团的点可能不止一个，其余不入团的点则与点$\\infty$连接成一条割线\n由已给单值解析分支$f(z)$的初值$f(z_1)$计算终值$f(z_2)$，先计算当$z$从$z_1$沿曲线$C$（不穿过支割线）到终点$z_2$时，$f(z)$的辐角连续改变量$\\Delta_carg\\,f(z)$，再计算终值\n$$f(z_2)=|f(z_2)|e^{i\\Delta_carg\\,f(z)}\\cdot e^{iarg\\,f(z_1)}$$ 6.反三角函数与反双曲函数 反正切函数$Arctan\\,z=\\frac{1}{2i}Ln\\frac{1+iz}{1-iz}$\n反正弦函数$Arcsin\\,z=\\frac{1}{i}Ln(iz+\\sqrt{1-z^2})$\n反余弦函数$Arccos\\,z=\\frac{1}{i}Ln(z+i\\sqrt{1-z^2})$\n反双曲余弦函数$Arcosh\\,z=Ln(z+\\sqrt{z^2-1})$\n反双曲正弦函数$Arsinh\\,z=Ln(z+\\sqrt{z^2+1})$\n反双曲正切函数$Artanh\\,z=\\frac{1}{2}Ln\\frac{1+z}{1-z}$\n其中对数是无穷多值的，根式是二值的，因此反三角函数和反双曲函数是无穷多值的，其分成单值解析分支的方法与前文讨论方法类似\n本章完\n","date":"2024-10-27T00:00:00Z","permalink":"https://INKEM.github.io/p/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E8%AE%BAep2.%E8%A7%A3%E6%9E%90%E5%87%BD%E6%95%B0/","title":"【复变函数论】Ep2.解析函数"},{"content":" 本学习笔记主要是为了拓展工程实践可能会应用到的相关知识，帮助了解和查阅知识体系、相关概念和基本思想，非以数学专业方向为主，因此不会探讨进一步的数学问题，甚至文中涉及到的部分知识也无需完全掌握，用抽象而严谨的数学语言表达的内容我会尽可能用自然语言（文中斜体字）或绘图辅助理解\n前置课程：微积分（高等数学/数学分析）\n自学教材：《复变函数论（第五版）》钟玉泉 编\n`​\n引言 复变函数论研究自变量为复数的函数，复变函数有时能比实变函数更能反映和描述自然现象和物理规律，为解决问题提供新思想的模型，在物理学、工程学、计算机科学等方面有广泛应用。\n复数与复变函数 §1 复数 1.复数域 形如$z=x+iy$的数称为复数\n$i$满足$i^2=-1$，称为虚数单位\n实数$x$和$y$分别称为复数$z$的实部和虚部，记为$x=Re\\,z, y=Im\\,z$\n虚部不为零的复数称为虚数\n实部为零且虚部不为零的复数称为纯虚数\n复数$x+iy$和$x-iy$称为互为共轭复数，复数$z$的共轭复数记为$\\bar{z}$，于是$x-iy=\\overline{x+iy}$\n复数的加（减）法按实部与实部相加（减），虚部与虚部相加（减）\n$z_1\\pm z_2=(x_1\\pm x_2)+i(y_1\\pm y_2)$\n加法遵守交换律与结合律 复数的乘法按多项式乘法法则，将结果中的$i^2$换成$-1$\n$z_1z_2=(x_1x_2-y_1y_2)+i(x_1y_2+y_1x_2)$\n乘法遵守交换律与结合律和乘法对于加法的分配律\n复数的除法先写成分式的形式，然后分子分母同乘分母的共轭复数，再进行简化，即\n$\\frac{z_{1}}{z_{2}}=\\frac{x_{1}x_{2}+y_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}+i\\frac{y_{1}x_{2}+x_{1}y_{2}}{x_{2}^{2}+y_{2}^{2}}(z_2\\neq 0)$\n引进上述运算后的全体复数称为复数域\n2.复平面 $(x, y)$称为复数$z=x+iy$的实数对形式\n可以借助于坐标为$(x, y)$的点来表示复数$z=x+yi$\n$x$轴称为实轴，$y$轴称为虚轴，表示复数$z$的平面称为复平面或$z$平面\n3.复数的模与辐角 模与辐角 用向量$\\overrightarrow{Oz}$表示复数$z=x+iy$，向量的长度称为复数$z$的模或绝对值，以符号$\\left | z \\right |$或$r$表示，因而有$r=\\left | z \\right |=\\sqrt{x^2+y^2}\\geqslant 0$\n实轴正向到非零复数的向量$\\overrightarrow{Oz}$间的夹角$θ$满足$\\tan \\theta =\\frac{y}{x}$，称为复数$z$的辐角，记为$θ=Arg z$\n任一非零复数$z$有无穷多个辐角，以$arg\\,z$表示其中一个特定值，且满足$-π","date":"2024-10-23T00:00:00Z","permalink":"https://INKEM.github.io/p/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E8%AE%BAep1.%E5%A4%8D%E6%95%B0%E4%B8%8E%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/","title":"【复变函数论】Ep1.复数与复变函数"}]